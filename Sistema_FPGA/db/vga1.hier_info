|vga1
o_vid_display <= VGA_drvr:inst.o_vid_display
MAX10_CLK1_50 => pll_25MHz:inst1.inclk0
ARDUINO_IO[2] => VGA_drvr:inst.i_blue_in[3]
ARDUINO_IO[2] => VGA_drvr:inst.i_green_in[3]
ARDUINO_IO[2] => VGA_drvr:inst.i_red_in[3]
ARDUINO_IO[2] => VGA_drvr:inst.i_blue_in[2]
ARDUINO_IO[2] => VGA_drvr:inst.i_green_in[2]
ARDUINO_IO[2] => VGA_drvr:inst.i_red_in[2]
ARDUINO_IO[2] => VGA_drvr:inst.i_blue_in[1]
ARDUINO_IO[2] => VGA_drvr:inst.i_green_in[1]
ARDUINO_IO[2] => VGA_drvr:inst.i_red_in[1]
ARDUINO_IO[2] => VGA_drvr:inst.i_blue_in[0]
ARDUINO_IO[2] => VGA_drvr:inst.i_green_in[0]
ARDUINO_IO[2] => VGA_drvr:inst.i_red_in[0]
VGA_VS <= VGA_drvr:inst.o_v_sync
VGA_HS <= VGA_drvr:inst.o_h_sync
controlBus[0] <= SW[2].DB_MAX_OUTPUT_PORT_TYPE
controlBus[1] <= SW[1].DB_MAX_OUTPUT_PORT_TYPE
controlBus[2] <= SW[0].DB_MAX_OUTPUT_PORT_TYPE
SW[0] => controlBus[2].DATAIN
SW[0] => compare:inst8.dataa[2]
SW[0] => RAM_Com:inst2.address[2]
SW[1] => controlBus[1].DATAIN
SW[1] => compare:inst8.dataa[1]
SW[1] => RAM_Com:inst2.address[1]
SW[2] => controlBus[0].DATAIN
SW[2] => compare:inst8.dataa[0]
SW[2] => RAM_Com:inst2.address[0]
SW[3] => dataBus[6].DATAIN
SW[3] => RAM_Com:inst2.data[6]
SW[4] => dataBus[5].DATAIN
SW[4] => RAM_Com:inst2.data[5]
SW[5] => dataBus[4].DATAIN
SW[5] => RAM_Com:inst2.data[4]
SW[6] => dataBus[3].DATAIN
SW[6] => RAM_Com:inst2.data[3]
SW[7] => dataBus[2].DATAIN
SW[7] => RAM_Com:inst2.data[2]
SW[8] => dataBus[1].DATAIN
SW[8] => RAM_Com:inst2.data[1]
SW[9] => dataBus[0].DATAIN
SW[9] => RAM_Com:inst2.data[0]
dataBus[0] <= SW[9].DB_MAX_OUTPUT_PORT_TYPE
dataBus[1] <= SW[8].DB_MAX_OUTPUT_PORT_TYPE
dataBus[2] <= SW[7].DB_MAX_OUTPUT_PORT_TYPE
dataBus[3] <= SW[6].DB_MAX_OUTPUT_PORT_TYPE
dataBus[4] <= SW[5].DB_MAX_OUTPUT_PORT_TYPE
dataBus[5] <= SW[4].DB_MAX_OUTPUT_PORT_TYPE
dataBus[6] <= SW[3].DB_MAX_OUTPUT_PORT_TYPE
q[0] <= RAM_Com:inst2.q[0]
q[1] <= RAM_Com:inst2.q[1]
q[2] <= RAM_Com:inst2.q[2]
q[3] <= RAM_Com:inst2.q[3]
q[4] <= RAM_Com:inst2.q[4]
q[5] <= RAM_Com:inst2.q[5]
q[6] <= RAM_Com:inst2.q[6]
VGA_B[0] <= VGA_drvr:inst.o_blue_out[0]
VGA_B[1] <= VGA_drvr:inst.o_blue_out[1]
VGA_B[2] <= VGA_drvr:inst.o_blue_out[2]
VGA_B[3] <= VGA_drvr:inst.o_blue_out[3]
VGA_G[0] <= VGA_drvr:inst.o_green_out[0]
VGA_G[1] <= VGA_drvr:inst.o_green_out[1]
VGA_G[2] <= VGA_drvr:inst.o_green_out[2]
VGA_G[3] <= VGA_drvr:inst.o_green_out[3]
VGA_R[0] <= VGA_drvr:inst.o_red_out[0]
VGA_R[1] <= VGA_drvr:inst.o_red_out[1]
VGA_R[2] <= VGA_drvr:inst.o_red_out[2]
VGA_R[3] <= VGA_drvr:inst.o_red_out[3]


|vga1|VGA_drvr:inst
i_vid_clk => blue[0].CLK
i_vid_clk => blue[1].CLK
i_vid_clk => blue[2].CLK
i_vid_clk => blue[3].CLK
i_vid_clk => green[0].CLK
i_vid_clk => green[1].CLK
i_vid_clk => green[2].CLK
i_vid_clk => green[3].CLK
i_vid_clk => red[0].CLK
i_vid_clk => red[1].CLK
i_vid_clk => red[2].CLK
i_vid_clk => red[3].CLK
i_vid_clk => h_count[0].CLK
i_vid_clk => h_count[1].CLK
i_vid_clk => h_count[2].CLK
i_vid_clk => h_count[3].CLK
i_vid_clk => h_count[4].CLK
i_vid_clk => h_count[5].CLK
i_vid_clk => h_count[6].CLK
i_vid_clk => h_count[7].CLK
i_vid_clk => h_count[8].CLK
i_vid_clk => h_count[9].CLK
i_vid_clk => v_count[0].CLK
i_vid_clk => v_count[1].CLK
i_vid_clk => v_count[2].CLK
i_vid_clk => v_count[3].CLK
i_vid_clk => v_count[4].CLK
i_vid_clk => v_count[5].CLK
i_vid_clk => v_count[6].CLK
i_vid_clk => v_count[7].CLK
i_vid_clk => v_count[8].CLK
i_vid_clk => v_count[9].CLK
i_rstb => blue[0].ACLR
i_rstb => blue[1].ACLR
i_rstb => blue[2].ACLR
i_rstb => blue[3].ACLR
i_rstb => green[0].ACLR
i_rstb => green[1].ACLR
i_rstb => green[2].ACLR
i_rstb => green[3].ACLR
i_rstb => red[0].ACLR
i_rstb => red[1].ACLR
i_rstb => red[2].ACLR
i_rstb => red[3].ACLR
i_rstb => h_count[0].ACLR
i_rstb => h_count[1].ACLR
i_rstb => h_count[2].ACLR
i_rstb => h_count[3].ACLR
i_rstb => h_count[4].ACLR
i_rstb => h_count[5].ACLR
i_rstb => h_count[6].ACLR
i_rstb => h_count[7].ACLR
i_rstb => h_count[8].ACLR
i_rstb => h_count[9].ACLR
i_rstb => v_count[0].ACLR
i_rstb => v_count[1].ACLR
i_rstb => v_count[2].ACLR
i_rstb => v_count[3].ACLR
i_rstb => v_count[4].ACLR
i_rstb => v_count[5].ACLR
i_rstb => v_count[6].ACLR
i_rstb => v_count[7].ACLR
i_rstb => v_count[8].ACLR
i_rstb => v_count[9].ACLR
o_h_sync <= process_0.DB_MAX_OUTPUT_PORT_TYPE
o_v_sync <= process_0.DB_MAX_OUTPUT_PORT_TYPE
o_pixel_x[0] <= o_pixel_x.DB_MAX_OUTPUT_PORT_TYPE
o_pixel_x[1] <= o_pixel_x.DB_MAX_OUTPUT_PORT_TYPE
o_pixel_x[2] <= o_pixel_x.DB_MAX_OUTPUT_PORT_TYPE
o_pixel_x[3] <= o_pixel_x.DB_MAX_OUTPUT_PORT_TYPE
o_pixel_x[4] <= o_pixel_x.DB_MAX_OUTPUT_PORT_TYPE
o_pixel_x[5] <= o_pixel_x.DB_MAX_OUTPUT_PORT_TYPE
o_pixel_x[6] <= o_pixel_x.DB_MAX_OUTPUT_PORT_TYPE
o_pixel_x[7] <= o_pixel_x.DB_MAX_OUTPUT_PORT_TYPE
o_pixel_x[8] <= o_pixel_x.DB_MAX_OUTPUT_PORT_TYPE
o_pixel_x[9] <= o_pixel_x.DB_MAX_OUTPUT_PORT_TYPE
o_pixel_y[0] <= o_pixel_y.DB_MAX_OUTPUT_PORT_TYPE
o_pixel_y[1] <= o_pixel_y.DB_MAX_OUTPUT_PORT_TYPE
o_pixel_y[2] <= o_pixel_y.DB_MAX_OUTPUT_PORT_TYPE
o_pixel_y[3] <= o_pixel_y.DB_MAX_OUTPUT_PORT_TYPE
o_pixel_y[4] <= o_pixel_y.DB_MAX_OUTPUT_PORT_TYPE
o_pixel_y[5] <= o_pixel_y.DB_MAX_OUTPUT_PORT_TYPE
o_pixel_y[6] <= o_pixel_y.DB_MAX_OUTPUT_PORT_TYPE
o_pixel_y[7] <= o_pixel_y.DB_MAX_OUTPUT_PORT_TYPE
o_pixel_y[8] <= o_pixel_y.DB_MAX_OUTPUT_PORT_TYPE
o_pixel_y[9] <= o_pixel_y.DB_MAX_OUTPUT_PORT_TYPE
o_vid_display <= display_on.DB_MAX_OUTPUT_PORT_TYPE
i_red_in[0] => red[0].DATAIN
i_red_in[1] => red[1].DATAIN
i_red_in[2] => red[2].DATAIN
i_red_in[3] => red[3].DATAIN
i_green_in[0] => green[0].DATAIN
i_green_in[1] => green[1].DATAIN
i_green_in[2] => green[2].DATAIN
i_green_in[3] => green[3].DATAIN
i_blue_in[0] => blue[0].DATAIN
i_blue_in[1] => blue[1].DATAIN
i_blue_in[2] => blue[2].DATAIN
i_blue_in[3] => blue[3].DATAIN
o_red_out[0] <= o_red_out.DB_MAX_OUTPUT_PORT_TYPE
o_red_out[1] <= o_red_out.DB_MAX_OUTPUT_PORT_TYPE
o_red_out[2] <= o_red_out.DB_MAX_OUTPUT_PORT_TYPE
o_red_out[3] <= o_red_out.DB_MAX_OUTPUT_PORT_TYPE
o_green_out[0] <= o_green_out.DB_MAX_OUTPUT_PORT_TYPE
o_green_out[1] <= o_green_out.DB_MAX_OUTPUT_PORT_TYPE
o_green_out[2] <= o_green_out.DB_MAX_OUTPUT_PORT_TYPE
o_green_out[3] <= o_green_out.DB_MAX_OUTPUT_PORT_TYPE
o_blue_out[0] <= o_blue_out.DB_MAX_OUTPUT_PORT_TYPE
o_blue_out[1] <= o_blue_out.DB_MAX_OUTPUT_PORT_TYPE
o_blue_out[2] <= o_blue_out.DB_MAX_OUTPUT_PORT_TYPE
o_blue_out[3] <= o_blue_out.DB_MAX_OUTPUT_PORT_TYPE


|vga1|pll_25MHz:inst1
areset => altpll:altpll_component.areset
inclk0 => altpll:altpll_component.inclk[0]
c0 <= altpll:altpll_component.clk[0]
locked <= altpll:altpll_component.locked


|vga1|pll_25MHz:inst1|altpll:altpll_component
inclk[0] => pll_25MHz_altpll:auto_generated.inclk[0]
inclk[1] => pll_25MHz_altpll:auto_generated.inclk[1]
fbin => ~NO_FANOUT~
pllena => ~NO_FANOUT~
clkswitch => ~NO_FANOUT~
areset => pll_25MHz_altpll:auto_generated.areset
pfdena => ~NO_FANOUT~
clkena[0] => ~NO_FANOUT~
clkena[1] => ~NO_FANOUT~
clkena[2] => ~NO_FANOUT~
clkena[3] => ~NO_FANOUT~
clkena[4] => ~NO_FANOUT~
clkena[5] => ~NO_FANOUT~
extclkena[0] => ~NO_FANOUT~
extclkena[1] => ~NO_FANOUT~
extclkena[2] => ~NO_FANOUT~
extclkena[3] => ~NO_FANOUT~
scanclk => ~NO_FANOUT~
scanclkena => ~NO_FANOUT~
scanaclr => ~NO_FANOUT~
scanread => ~NO_FANOUT~
scanwrite => ~NO_FANOUT~
scandata => ~NO_FANOUT~
phasecounterselect[0] => ~NO_FANOUT~
phasecounterselect[1] => ~NO_FANOUT~
phasecounterselect[2] => ~NO_FANOUT~
phasecounterselect[3] => ~NO_FANOUT~
phaseupdown => ~NO_FANOUT~
phasestep => ~NO_FANOUT~
configupdate => ~NO_FANOUT~
fbmimicbidir <> <GND>
clk[0] <= clk[0].DB_MAX_OUTPUT_PORT_TYPE
clk[1] <= clk[1].DB_MAX_OUTPUT_PORT_TYPE
clk[2] <= clk[2].DB_MAX_OUTPUT_PORT_TYPE
clk[3] <= clk[3].DB_MAX_OUTPUT_PORT_TYPE
clk[4] <= clk[4].DB_MAX_OUTPUT_PORT_TYPE
extclk[0] <= <GND>
extclk[1] <= <GND>
extclk[2] <= <GND>
extclk[3] <= <GND>
clkbad[0] <= <GND>
clkbad[1] <= <GND>
enable1 <= <GND>
enable0 <= <GND>
activeclock <= <GND>
clkloss <= <GND>
locked <= pll_25MHz_altpll:auto_generated.locked
scandataout <= <GND>
scandone <= <GND>
sclkout0 <= <GND>
sclkout1 <= <GND>
phasedone <= <GND>
vcooverrange <= <GND>
vcounderrange <= <GND>
fbout <= <GND>
fref <= <GND>
icdrclk <= <GND>


|vga1|pll_25MHz:inst1|altpll:altpll_component|pll_25MHz_altpll:auto_generated
areset => pll_lock_sync.ACLR
areset => pll1.ARESET
clk[0] <= pll1.CLK
clk[1] <= pll1.CLK1
clk[2] <= pll1.CLK2
clk[3] <= pll1.CLK3
clk[4] <= pll1.CLK4
inclk[0] => pll1.CLK
inclk[1] => pll1.CLK1
locked <= locked.DB_MAX_OUTPUT_PORT_TYPE


|vga1|constantVGA:inst6
result[0] <= lpm_constant:LPM_CONSTANT_component.result[0]


|vga1|constantVGA:inst6|lpm_constant:LPM_CONSTANT_component
result[0] <= <VCC>


|vga1|RAM_Com:inst2
address[0] => altsyncram:altsyncram_component.address_a[0]
address[1] => altsyncram:altsyncram_component.address_a[1]
address[2] => altsyncram:altsyncram_component.address_a[2]
clock => altsyncram:altsyncram_component.clock0
data[0] => altsyncram:altsyncram_component.data_a[0]
data[1] => altsyncram:altsyncram_component.data_a[1]
data[2] => altsyncram:altsyncram_component.data_a[2]
data[3] => altsyncram:altsyncram_component.data_a[3]
data[4] => altsyncram:altsyncram_component.data_a[4]
data[5] => altsyncram:altsyncram_component.data_a[5]
data[6] => altsyncram:altsyncram_component.data_a[6]
wren => altsyncram:altsyncram_component.wren_a
q[0] <= altsyncram:altsyncram_component.q_a[0]
q[1] <= altsyncram:altsyncram_component.q_a[1]
q[2] <= altsyncram:altsyncram_component.q_a[2]
q[3] <= altsyncram:altsyncram_component.q_a[3]
q[4] <= altsyncram:altsyncram_component.q_a[4]
q[5] <= altsyncram:altsyncram_component.q_a[5]
q[6] <= altsyncram:altsyncram_component.q_a[6]


|vga1|RAM_Com:inst2|altsyncram:altsyncram_component
wren_a => altsyncram_kfo3:auto_generated.wren_a
rden_a => ~NO_FANOUT~
wren_b => ~NO_FANOUT~
rden_b => ~NO_FANOUT~
data_a[0] => altsyncram_kfo3:auto_generated.data_a[0]
data_a[1] => altsyncram_kfo3:auto_generated.data_a[1]
data_a[2] => altsyncram_kfo3:auto_generated.data_a[2]
data_a[3] => altsyncram_kfo3:auto_generated.data_a[3]
data_a[4] => altsyncram_kfo3:auto_generated.data_a[4]
data_a[5] => altsyncram_kfo3:auto_generated.data_a[5]
data_a[6] => altsyncram_kfo3:auto_generated.data_a[6]
data_b[0] => ~NO_FANOUT~
address_a[0] => altsyncram_kfo3:auto_generated.address_a[0]
address_a[1] => altsyncram_kfo3:auto_generated.address_a[1]
address_a[2] => altsyncram_kfo3:auto_generated.address_a[2]
address_b[0] => ~NO_FANOUT~
addressstall_a => ~NO_FANOUT~
addressstall_b => ~NO_FANOUT~
clock0 => altsyncram_kfo3:auto_generated.clock0
clock1 => ~NO_FANOUT~
clocken0 => ~NO_FANOUT~
clocken1 => ~NO_FANOUT~
clocken2 => ~NO_FANOUT~
clocken3 => ~NO_FANOUT~
aclr0 => ~NO_FANOUT~
aclr1 => ~NO_FANOUT~
byteena_a[0] => ~NO_FANOUT~
byteena_b[0] => ~NO_FANOUT~
q_a[0] <= altsyncram_kfo3:auto_generated.q_a[0]
q_a[1] <= altsyncram_kfo3:auto_generated.q_a[1]
q_a[2] <= altsyncram_kfo3:auto_generated.q_a[2]
q_a[3] <= altsyncram_kfo3:auto_generated.q_a[3]
q_a[4] <= altsyncram_kfo3:auto_generated.q_a[4]
q_a[5] <= altsyncram_kfo3:auto_generated.q_a[5]
q_a[6] <= altsyncram_kfo3:auto_generated.q_a[6]
q_b[0] <= <GND>
eccstatus[0] <= <GND>
eccstatus[1] <= <GND>
eccstatus[2] <= <GND>


|vga1|RAM_Com:inst2|altsyncram:altsyncram_component|altsyncram_kfo3:auto_generated
address_a[0] => ram_block1a0.PORTAADDR
address_a[0] => ram_block1a1.PORTAADDR
address_a[0] => ram_block1a2.PORTAADDR
address_a[0] => ram_block1a3.PORTAADDR
address_a[0] => ram_block1a4.PORTAADDR
address_a[0] => ram_block1a5.PORTAADDR
address_a[0] => ram_block1a6.PORTAADDR
address_a[1] => ram_block1a0.PORTAADDR1
address_a[1] => ram_block1a1.PORTAADDR1
address_a[1] => ram_block1a2.PORTAADDR1
address_a[1] => ram_block1a3.PORTAADDR1
address_a[1] => ram_block1a4.PORTAADDR1
address_a[1] => ram_block1a5.PORTAADDR1
address_a[1] => ram_block1a6.PORTAADDR1
address_a[2] => ram_block1a0.PORTAADDR2
address_a[2] => ram_block1a1.PORTAADDR2
address_a[2] => ram_block1a2.PORTAADDR2
address_a[2] => ram_block1a3.PORTAADDR2
address_a[2] => ram_block1a4.PORTAADDR2
address_a[2] => ram_block1a5.PORTAADDR2
address_a[2] => ram_block1a6.PORTAADDR2
clock0 => ram_block1a0.CLK0
clock0 => ram_block1a1.CLK0
clock0 => ram_block1a2.CLK0
clock0 => ram_block1a3.CLK0
clock0 => ram_block1a4.CLK0
clock0 => ram_block1a5.CLK0
clock0 => ram_block1a6.CLK0
data_a[0] => ram_block1a0.PORTADATAIN
data_a[1] => ram_block1a1.PORTADATAIN
data_a[2] => ram_block1a2.PORTADATAIN
data_a[3] => ram_block1a3.PORTADATAIN
data_a[4] => ram_block1a4.PORTADATAIN
data_a[5] => ram_block1a5.PORTADATAIN
data_a[6] => ram_block1a6.PORTADATAIN
q_a[0] <= ram_block1a0.PORTADATAOUT
q_a[1] <= ram_block1a1.PORTADATAOUT
q_a[2] <= ram_block1a2.PORTADATAOUT
q_a[3] <= ram_block1a3.PORTADATAOUT
q_a[4] <= ram_block1a4.PORTADATAOUT
q_a[5] <= ram_block1a5.PORTADATAOUT
q_a[6] <= ram_block1a6.PORTADATAOUT
wren_a => ram_block1a0.PORTAWE
wren_a => ram_block1a1.PORTAWE
wren_a => ram_block1a2.PORTAWE
wren_a => ram_block1a3.PORTAWE
wren_a => ram_block1a4.PORTAWE
wren_a => ram_block1a5.PORTAWE
wren_a => ram_block1a6.PORTAWE


|vga1|compare:inst8
dataa[0] => lpm_compare:LPM_COMPARE_component.dataa[0]
dataa[1] => lpm_compare:LPM_COMPARE_component.dataa[1]
dataa[2] => lpm_compare:LPM_COMPARE_component.dataa[2]
datab[0] => lpm_compare:LPM_COMPARE_component.datab[0]
datab[1] => lpm_compare:LPM_COMPARE_component.datab[1]
datab[2] => lpm_compare:LPM_COMPARE_component.datab[2]
aneb <= lpm_compare:LPM_COMPARE_component.aneb


|vga1|compare:inst8|lpm_compare:LPM_COMPARE_component
dataa[0] => cmpr_u3g:auto_generated.dataa[0]
dataa[1] => cmpr_u3g:auto_generated.dataa[1]
dataa[2] => cmpr_u3g:auto_generated.dataa[2]
datab[0] => cmpr_u3g:auto_generated.datab[0]
datab[1] => cmpr_u3g:auto_generated.datab[1]
datab[2] => cmpr_u3g:auto_generated.datab[2]
clock => ~NO_FANOUT~
aclr => ~NO_FANOUT~
clken => ~NO_FANOUT~
alb <= <GND>
aeb <= <GND>
agb <= <GND>
aleb <= <GND>
aneb <= cmpr_u3g:auto_generated.aneb
ageb <= <GND>


|vga1|compare:inst8|lpm_compare:LPM_COMPARE_component|cmpr_u3g:auto_generated
aneb <= aneb_result_wire[0].DB_MAX_OUTPUT_PORT_TYPE
dataa[0] => data_wire[0].IN0
dataa[1] => data_wire[0].IN0
dataa[2] => data_wire[1].IN0
datab[0] => data_wire[0].IN1
datab[1] => data_wire[0].IN1
datab[2] => data_wire[1].IN1


|vga1|constControl:inst3
result[0] <= lpm_constant:LPM_CONSTANT_component.result[0]
result[1] <= lpm_constant:LPM_CONSTANT_component.result[1]
result[2] <= lpm_constant:LPM_CONSTANT_component.result[2]


|vga1|constControl:inst3|lpm_constant:LPM_CONSTANT_component
result[0] <= <VCC>
result[1] <= <VCC>
result[2] <= <VCC>


